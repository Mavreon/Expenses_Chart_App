[{"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\index.js":"1","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\App.js":"2","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\Expenses.js":"3","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpenseItem.js":"4","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\UI\\Card.js":"5","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpenseDate.js":"6","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\NewExpense\\NewExpense.js":"7","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\NewExpense\\ExpenseForm.js":"8","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\ExpenseFilter\\ExpensesFilter.js":"9","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpensesList.js":"10","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\ExpensesChart.js":"11","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\Chart.js":"12","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\ChartBar.js":"13"},{"size":179,"mtime":1657390693580,"results":"14","hashOfConfig":"15"},{"size":1248,"mtime":1657356045341,"results":"16","hashOfConfig":"15"},{"size":1008,"mtime":1657516977523,"results":"17","hashOfConfig":"15"},{"size":1005,"mtime":1657366914605,"results":"18","hashOfConfig":"15"},{"size":228,"mtime":1657107642476,"results":"19","hashOfConfig":"15"},{"size":544,"mtime":1657106616125,"results":"20","hashOfConfig":"15"},{"size":552,"mtime":1657353078892,"results":"21","hashOfConfig":"15"},{"size":2547,"mtime":1657517831215,"results":"22","hashOfConfig":"15"},{"size":641,"mtime":1657228641202,"results":"23","hashOfConfig":"15"},{"size":738,"mtime":1657361984366,"results":"24","hashOfConfig":"15"},{"size":850,"mtime":1657517054963,"results":"25","hashOfConfig":"15"},{"size":593,"mtime":1657516915080,"results":"26","hashOfConfig":"15"},{"size":628,"mtime":1657517719643,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9f3kin",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\index.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\App.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\Expenses.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpenseItem.js",["70"],[],"import React, { useState } from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\n\r\n\r\nconst ExpenseItem= (props) => {\r\n    //React hooks must only be called directly inside react component functions...\r\n    /*\r\n    UseState(parameter) returns an array of two elements where the first \r\n    element is the current state value and the second \r\n    element is a function that is to be called on changing the \r\n    value assigned to the first element.\r\n    */\r\n    const [title, setTitle] = useState(props.title);\r\n    //console.log('New State:' + title);\r\n\r\n    return(\r\n        <li>\r\n        <Card className='expense-item'>\r\n           <ExpenseDate date={props.date}></ExpenseDate>\r\n            <div className='expense-item__description'>\r\n                <h2>{title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\UI\\Card.js",[],[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpenseDate.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\NewExpense\\NewExpense.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\NewExpense\\ExpenseForm.js",["71"],[],"import React, {useDebugValue, useState} from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm=(props)=>{\r\n\r\n    // Initialise state...\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    \r\n\r\n    // Create handler functions...\r\n    const titleChangeHandler = (event)=>{\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event)=>{\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event)=>{\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler=(event)=>{\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        \r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n        onCancelHandler();\r\n    };\r\n\r\n    const [canCancel, setCanCancel] = useState(true);\r\n\r\n    const onCancelHandler = ()=>{\r\n        setCanCancel(true);\r\n    };\r\n    const onAddhandler = ()=>{\r\n        setCanCancel(false);\r\n    };\r\n\r\n    if(canCancel)\r\n    {\r\n        return (\r\n            <div className=\"new-expense__add\">\r\n                <button onClick={onAddhandler}>Add New Expense</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min = '2019-01-01' max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={onCancelHandler}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\ExpenseFilter\\ExpensesFilter.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Expenses\\ExpensesList.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\ExpensesChart.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\Chart.js",[],[],"C:\\Users\\admin\\Documents\\Github\\Learn_React\\src\\components\\Chart\\ChartBar.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":16,"column":19,"nodeType":"74","messageId":"75","endLine":16,"endColumn":27},{"ruleId":"72","severity":1,"message":"76","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":29},"no-unused-vars","'setTitle' is assigned a value but never used.","Identifier","unusedVar","'useDebugValue' is defined but never used."]